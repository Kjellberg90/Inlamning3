// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220112152255_Added_Product_Attributes")]
    partial class Added_Product_Attributes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("StaffId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<float>("Stock")
                        .HasColumnType("real");

                    b.HasKey("ProductId");

                    b.HasIndex("StaffId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DAL.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MentorID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("MentorShipEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ssn")
                        .HasColumnType("int");

                    b.HasKey("StaffId");

                    b.HasIndex("MentorID");

                    b.HasIndex("Ssn")
                        .IsUnique();

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.HasOne("DAL.Staff", "Staff")
                        .WithMany("Department")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.HasOne("DAL.Staff", "Staff")
                        .WithMany("Product")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DAL.Staff", b =>
                {
                    b.HasOne("DAL.Staff", "Mentor")
                        .WithMany("Pupil")
                        .HasForeignKey("MentorID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("DAL.Staff", b =>
                {
                    b.Navigation("Department");

                    b.Navigation("Product");

                    b.Navigation("Pupil");
                });
#pragma warning restore 612, 618
        }
    }
}
